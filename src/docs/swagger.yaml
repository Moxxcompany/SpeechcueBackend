openapi: 3.0.0
info:
  title: SpeechCue API
  version: 1.0.0
  description: REST API for managing users and authentication
servers:
  - url: http://localhost:8888
    description: Local development server
  - url: http://85.9.196.132:3000
    description: Production Asterisk Audio Server

paths:
  /api/users:
    get:
      summary: Get all users
      tags: [Users]
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

    post:
      summary: Create a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: User created successfully

  /api/auth/web-login:
    post:
      summary: Web App Login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: JWT returned

  /api/auth/telegram-mini:
    post:
      summary: Telegram Mini App Authentication
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                id: "12345678"
                first_name: "Hemang"
                username: "hemang"
                auth_date: "1685467890"
                hash: "abcdefg..."
      responses:
        200:
          description: JWT returned

  /api/auth/telegram-bot:
    post:
      summary: Telegram Bot Authentication
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                telegramId:
                  type: string
                name:
                  type: string
      responses:
        200:
          description: JWT returned

  /api/twilio/countries:
    get:
      summary: List countries available for phone number provisioning
      tags: [Twilio]
      responses:
        200:
          description: List of countries
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    country:
                      type: string
                    isoCountry:
                      type: string
                    priceUnit:
                      type: string

  /api/twilio/number-types/{isoCountry}:
    get:
      summary: Get available number types for a specific country
      tags: [Twilio]
      parameters:
        - name: isoCountry
          in: path
          required: true
          schema:
            type: string
            example: US
      responses:
        200:
          description: List of available number types
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      example: local
                    value:
                      type: string
                      example: local

      summary: Get available number types for a specific country
      tags: [Twilio]
      parameters:
        - name: isoCountry
          in: path
          required: true
          schema:
            type: string
            example: US
      responses:
        200:
          description: List of available number types
          content:
            application/json:
              schema:
                type: object
                properties:
                  types:
                    type: array
                    items:
                      type: string
                      enum: [local, mobile, tollFree]
                    example: [local, tollFree]

  /api/twilio/countries/{isoCountry}/regions:
    get:
      summary: Get list of regions by number type
      tags: [Twilio]
      parameters:
        - name: isoCountry
          in: path
          required: true
          schema:
            type: string
            example: US
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: [local, mobile, tollFree]
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        200:
          description: List of regions (paginated)
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        locality:
                          type: string
                        region:
                          type: string
                        isoCountry:
                          type: string
                  page:
                    type: integer
                  limit:
                    type: integer
                  total:
                    type: integer
                  totalPages:
                    type: integer

  /api/twilio/available-numbers:
    get:
      summary: Search available Twilio phone numbers
      tags: [Twilio]
      parameters:
        - name: country
          in: query
          required: true
          schema:
            type: string
            example: US
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: [local, mobile, tollFree]
        - name: region
          in: query
          schema:
            type: string
            example: LA
        - name: locality
          in: query
          schema:
            type: string
            example: New Iberia
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: A list of available phone numbers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    friendlyName:
                      type: string
                      example: "+447453660364"
                    phoneNumber:
                      type: string
                      example: "+447453660364"
                    lata:
                      type: string
                      nullable: true
                    locality:
                      type: string
                      nullable: true
                    rateCenter:
                      type: string
                      nullable: true
                    latitude:
                      type: string
                      example: "0.000000"
                    longitude:
                      type: string
                      example: "0.000000"
                    region:
                      type: string
                      nullable: true
                    postalCode:
                      type: string
                      nullable: true
                    isoCountry:
                      type: string
                      example: "GB"
                    addressRequirements:
                      type: string
                      example: "none"
                    beta:
                      type: boolean
                      example: false
                    capabilities:
                      type: object
                      properties:
                        voice:
                          type: boolean
                          example: true
                        SMS:
                          type: boolean
                          example: true
                        MMS:
                          type: boolean
                          example: false

  /api/twilio/subaccounts/create:
    post:
      summary: Create a new Twilio subaccount
      tags: [Twilio]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [friendlyName,userId]
              properties:
                friendlyName:
                  type: string
                  example: "My Test SubAccount"
                userId:
                  type: string
                  example: "userId"
      responses:
        201:
          description: Subaccount created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: string
                  authToken:
                    type: string
                  status:
                    type: string
                  dateCreated:
                    type: string
  /api/twilio/subaccounts:
    get:
      summary: List all Twilio subaccounts
      tags: [Twilio]
      responses:
        200:
          description: List of subaccounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sid:
                      type: string
                      example: "ACXXXXXXXXXXXXXXXXXXXX"
                    friendlyName:
                      type: string
                      example: "User-1234-Hemang"
                    status:
                      type: string
                      example: "active"
                    dateCreated:
                      type: string
                    dateUpdated:
                      type: string

  /api/twilio/subaccounts/suspend:
    post:
      summary: Suspend a Twilio subaccount
      tags: [Twilio]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [subAccountSid]
              properties:
                subAccountSid:
                  type: string
                  example: ACXXXXXXXXXXXXXXXXXXXX
      responses:
        200:
          description: Subaccount suspended
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: string
                  status:
                    type: string
                    example: suspended
                  dateUpdated:
                    type: string

  /api/twilio/subaccounts/reactivate:
    post:
      summary: Reactivate a suspended Twilio subaccount
      tags: [Twilio]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [subAccountSid]
              properties:
                subAccountSid:
                  type: string
                  example: ACXXXXXXXXXXXXXXXXXXXX
      responses:
        200:
          description: Subaccount reactivated
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: string
                  status:
                    type: string
                    example: active
                  dateUpdated:
                    type: string

  /api/twilio/subaccounts/close:
    post:
      summary: Close a Twilio subaccount
      tags: [Twilio]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subAccountSid
              properties:
                subAccountSid:
                  type: string
                  example: "ACXXXXXXXXXXXXXXXXXXXX"
      responses:
        200:
          description: Subaccount closed
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: string
                  status:
                    type: string
                    example: closed
                  dateUpdated:
                    type: string
  /api/twilio/numbers/purchase:
    post:
      summary: Purchase a phone number from Twilio
      tags: [Twilio]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [phoneNumber]
              properties:
                phoneNumber:
                  type: string
                  example: "+15005550006"
                subAccountSid:
                  type: string
                  example: "ACXXXXXXXXXXXXXXXXXXXX"
                voiceUrl:
                  type: string
                  example: "https://example.com/voice"
                smsUrl:
                  type: string
                  example: "https://example.com/sms"
                userId:
                  type: integer
                  example: 1
      responses:
        201:
          description: Number purchased successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: string
                  phoneNumber:
                    type: string
                  friendlyName:
                    type: string
                  isoCountry:
                    type: string
                  capabilities:
                    type: object
  /api/twilio/numbers:
    get:
      summary: List purchased phone numbers
      tags: [Twilio]
      parameters:
        - name: userId
          in: query
          required: false
          schema:
            type: integer
      responses:
        200:
          description: List of phone numbers

  /api/twilio/numbers/{sid}:
    get:
      summary: Get a purchased phone number by its SID
      tags: [Twilio]
      parameters:
        - name: sid
          in: path
          required: true
          schema:
            type: string
            example: PNXXXXXXXXXXXXXXXXXXXX
      responses:
        200:
          description: Phone number details
          content:
            application/json:
              schema:
                type: object
                properties:
                  phoneNumber:
                    type: string
                  friendlyName:
                    type: string
                  isoCountry:
                    type: string
                  type:
                    type: string
                  capabilities:
                    type: object
                  voiceUrl:
                    type: string
                  smsUrl:
                    type: string
                  sid:
                    type: string


  /api/twilio/numbers/{sid}:
    delete:
      summary: Release a purchased number
      tags: [Twilio]
      parameters:
        - name: sid
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Number released

  /api/freepbx/extensions/create:
    post:
      summary: Create a new FreePBX extension
      description: Creates an extension in FreePBX using GraphQL, stores it in the local DB, and associates it with a user.
      tags: [FreePBX]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - displayname
                - email
              properties:
                userId:
                  type: integer
                  example: 42
                  description: ID of the user creating the extension
                displayname:
                  type: string
                  example: "Agent John"
                email:
                  type: string
                  example: "john@example.com"
      responses:
        '201':
          description: Extension created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Extension created successfully
                  extension:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      extensionId:
                        type: integer
                        example: 1001
                      userId:
                        type: integer
                        example: 42
                      displayname:
                        type: string
                        example: "Agent John"
                      email:
                        type: string
                        example: "john@example.com"
                      tech:
                        type: string
                        example: "pjsip"
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Bad request or FreePBX failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
        '500':
          description: Server error

  /api/freepbx/extensions:
    get:
      summary: Get all extensions for the authenticated user
      tags: [FreePBX]
      parameters:
      - name: userId
        in: query
        required: false
        schema:
          type: string
        description: User ID to filter extensions
      responses:
        '200':
          description: List of extensions
          content:
            application/json:
              schema:
                type: object
                properties:
                  extensions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Extension'

  /api/freepbx/extensions/{id}:
    get:
      summary: Get extension by ID (restricted to user)
      tags: [FreePBX]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: query
          required: false
          schema:
            type: string
          description: User ID to filter extensions
      responses:
        '200':
          description: Extension details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '404':
          description: Extension not found

    put:
      summary: Update extension by ID (FreePBX + Local DB)
      tags: [FreePBX]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayname:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Extension updated successfully
        '400':
          description: Validation error or missing fields
        '404':
          description: Extension not found or user unauthorized


    delete:
      summary: Delete extension by ID (restricted to user)
      tags: [FreePBX]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          parameters:
        - name: userId
          in: query
          required: false
          schema:
            type: string
          description: User ID to filter extensions
      responses:
        '200':
          description: Extension deleted successfully

  /api/ivrs:
    post:
      summary: Create a new IVR flow
      tags: [IVRs]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - flow
                - userId
              properties:
                userId:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "Main Support IVR"
                description:
                  type: string
                  example: "Basic routing for customer service"
                flow:
                  type: object
                  example:
                    nodes:
                      - id: "1"
                        type: "start"
                        data:
                          label: "Welcome"
                        position:
                          x: 0
                          y: 0
                    edges:
                      - id: "e1-2"
                        source: "1"
                        target: "2"
                        type: "smoothstep"
      responses:
        "201":
          description: IVR created
        "500":
          description: Server error

    get:
      summary: Get all IVRs by userId
      tags: [IVRs]
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of IVRs
        "500":
          description: Server error

  /api/ivrs/{id}:
    get:
      summary: Get IVR by ID (with userId check)
      tags: [IVRs]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: query
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: IVR found
        "404":
          description: Not found
        "500":
          description: Server error

    put:
      summary: Update IVR by ID
      tags: [IVRs]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ userId ]
              properties:
                userId:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                flow:
                  type: object
      responses:
        "200":
          description: IVR updated
        "404":
          description: Not found
        "500":
          description: Server error

    delete:
      summary: Delete IVR by ID
      tags: [IVRs]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: query
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: IVR deleted
        "404":
          description: Not found
        "500":
          description: Server error

  /api/test-ivr/{ivrId}:
    post:
      summary: Manually test and simulate an IVR flow without real call
      tags:
        - Test
      parameters:
        - in: path
          name: ivrId
          required: true
          schema:
            type: integer
          description: ID of the IVR you want to simulate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: integer
                  example: 1
      responses:
        "200":
          description: Successfully simulated IVR flow
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: IVR executed (simulated)
        "404":
          description: IVR not found
        "500":
          description: Server error
  
  /api/ivrs/assign-number:
    post:
      tags: [IVRs]
      summary: Assign a phone number to an IVR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ivrId
                - phoneNumberId
              properties:
                ivrId:
                  type: integer
                  example: 1
                phoneNumberId:
                  type: integer
                  example: 10
      responses:
        200:
          description: Number assigned successfully
        404:
          description: IVR or phone number not found

  /api/ivrs/assigned-numbers/{userId}:
    get:
      tags: [IVRs]
      summary: Get all phone numbers assigned to IVRs for a specific user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user
      responses:
        200:
          description: List of assigned phone numbers with IVR details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        phoneNumber:
                          type: string
                          example: +1234567890
                        ivrName:
                          type: string
                          example: Main Support IVR
                        ivrDescription:
                          type: string
                          example: Handles basic support routing
                        ivrId:
                          type: integer
                          example: 1
        400:
          description: Invalid userId
        404:
          description: No IVRs or phone numbers found

  /api/ivrs/deassign-number:
    post:
      tags: [IVRs]
      summary: Remove phone number from an IVR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phoneNumberId
              properties:
                phoneNumberId:
                  type: integer
                  example: 10
      responses:
        200:
          description: Number deassigned successfully
        404:
          description: Phone number not found
      
  /api/audio/upload:
    post:
      tags: [IVRs]
      summary: Upload an audio file to the server (Asterisk)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audio:
                  type: string
                  format: binary
      responses:
        200:
          description: Upload successful
        400:
          description: Invalid file format
        500:
          description: Upload failed

  /api/audio/delete:
    delete:
      tags: [IVRs]
      summary: Delete an audio file from the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - filename
              properties:
                filename:
                  type: string
                  example: tts_IVR_Testing_2_1746477640662.wav
      responses:
        200:
          description: Audio deleted successfully
        404:
          description: File not found
        500:
          description: Delete failed

  /api/tts/providersAndLanguages:
    get:
      tags: [TTS]
      summary: Get list of available TTS providers and their supported languages
      responses:
        200:
          description: List of providers and the languages they support
          content:
            application/json:
              schema:
                type: object
                properties:
                  providers:
                    type: array
                    items:
                      type: object
                      properties:
                        provider_name:
                          type: string
                          example: google
                        languages:
                          type: array
                          items:
                            type: object
                            properties:
                              language:
                                type: string
                                example: en-US
                              display_name:
                                type: string
                                example: English (United States)
                              genders:
                                type: array
                                items:
                                  type: string
                                  example: MALE
  /api/ringgroups:
    post:
      tags: [RingGroups]
      summary: Create a new ring group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - strategy
                - members
                - userId
              properties:
                ringGroupId:
                  type: string
                  example: '6000'
                strategy:
                  type: string
                  example: ringall
                members:
                  type: array
                  items:
                    type: string
                  example: ["1001", "1002"]
                description:
                  type: string
                  example: "Support department ring group"
                userId:
                  type: integer
                  example: 1
      responses:
        200:
          description: Ring group created successfully
        400:
          description: Invalid input
        500:
          description: Internal server error

    get:
      tags: [RingGroups]
      summary: Get all ring groups for a user
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
          description: User ID to fetch ring groups
      responses:
        200:
          description: List of ring groups
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ringGroupId:
                      type: string
                      example: '6000'
                    strategy:
                      type: string
                      example: ringall
                    members:
                      type: array
                      items:
                        type: string
                    description:
                      type: string
                      example: "Support department ring group"
                    userId:
                      type: integer
                      example: 1
        400:
          description: Missing or invalid userId
        500:
          description: Internal server error

  /api/ringgroups/{id}:
    get:
      tags: [RingGroups]
      summary: Get a ring group by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: query
          required: true
          schema:
            type: integer
          description: User ID that owns the ring group
      responses:
        200:
          description: Ring group details
          content:
            application/json:
              schema:
                type: object
                properties:
                  ringGroupId:
                    type: string
                    example: '6000'
                  strategy:
                    type: string
                    example: ringall
                  members:
                    type: array
                    items:
                      type: string
                  description:
                    type: string
                    example: "Support department ring group"
                  userId:
                    type: integer
                    example: 1
        404:
          description: Ring group not found
        400:
          description: Missing or invalid userId
        500:
          description: Internal server error

    put:
      tags: [RingGroups]
      summary: Update a ring group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                strategy:
                  type: string
                  example: ringall
                members:
                  type: array
                  items:
                    type: string
                  example: ["1001", "1003"]
                description:
                  type: string
                  example: "Updated support group"


    delete:
      tags: [RingGroups]
      summary: Delete a ring group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: query
          required: true
          schema:
            type: integer
          description: User ID that owns the ring group
      responses:
        200:
          description: Ring group deleted successfully
        404:
          description: Ring group not found
        400:
          description: Missing or invalid userId
        500:
          description: Internal server error


tags:
  - name: Users
    description: API for user management
  - name: Auth
    description: Authentication endpoints
  - name: Twilio
    description: Twilio phone number management APIs
  - name: FreePBX
    description: Manage FreePBX resources like extensions
  - name: IVRs
    description: Manage IVR flows created by users
  - name: Test
    description: Test and simulate IVR flows without real calls
  - name: TTS
    description: Text-to-Speech (TTS) related APIs
  - name: RingGroups
    description: Ring group call management and routing
